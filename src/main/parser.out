Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ESPACIO
    HILERA
    OPERADOR_LOGICO

Grammar

Rule 0     S' -> restricformal
Rule 1     restricformal -> COMA tipo IDENTIFICADOR
Rule 2     programa -> claseprincipal declclase
Rule 3     claseprincipal -> PALABRA_CLAVE PALABRA_CLAVE IDENTIFICADOR L_CORCHETE PALABRA_CLAVE PALABRA_CLAVE PALABRA_CLAVE PALABRA_CLAVE L_PARENTESIS PALABRA_CLAVE L_CUADRADO R_CUADRADO IDENTIFICADOR R_PARENTESIS L_CORCHETE R_CORCHETE R_CORCHETE
Rule 4     declclase -> PALABRA_CLAVE IDENTIFICADOR declclaseprima
Rule 5     declclaseprima -> L_CORCHETE declavar declmetodo R_CORCHETE
Rule 6     declclaseprima -> PALABRA_CLAVE IDENTIFICADOR L_CORCHETE declavar declmetodo R_CORCHETE
Rule 7     declavar -> tipo IDENTIFICADOR PUNTO_Y_COMA
Rule 8     declmetodo -> PALABRA_CLAVE tipo IDENTIFICADOR L_PARENTESIS listaformal R_PARENTESIS L_CORCHETE declavar declaracion PALABRA_CLAVE expren PUNTO_Y_COMA R_CORCHETE
Rule 9     listaformal -> tipo IDENTIFICADOR restricformal
Rule 10    tipo -> ENTERO L_CUADRADO R_CUADRADO
Rule 11    tipo -> BOOLEANO
Rule 12    tipo -> ENTERO
Rule 13    tipo -> IDENTIFICADOR
Rule 14    declaracion -> L_CORCHETE declaracion R_CORCHETE
Rule 15    declaracion -> PALABRA_CLAVE L_PARENTESIS expren R_PARENTESIS declaracion PALABRA_CLAVE declaracion
Rule 16    declaracion -> PALABRA_CLAVE L_PARENTESIS expren R_PARENTESIS declaracion
Rule 17    declaracion -> PALABRA_CLAVE L_PARENTESIS expren R_PARENTESIS PUNTO_Y_COMA
Rule 18    declaracion -> IDENTIFICADOR OPERADOR expren PUNTO_Y_COMA
Rule 19    declaracion -> IDENTIFICADOR L_CUADRADO expren R_CUADRADO OPERADOR expren
Rule 20    declaracion -> <empty>
Rule 21    expren -> ENTERO exprenprima
Rule 22    expren -> IDENTIFICADOR exprenprima
Rule 23    expren -> PALABRA_CLAVE exprenprima
Rule 24    expren -> PALABRA_CLAVE PALABRA_CLAVE L_CUADRADO expren R_CUADRADO exprenprima
Rule 25    expren -> PALABRA_CLAVE IDENTIFICADOR L_PARENTESIS R_PARENTESIS exprenprima
Rule 26    expren -> expren exprenprima
Rule 27    expren -> L_PARENTESIS expren R_PARENTESIS exprenprima
Rule 28    expren -> <empty>
Rule 29    exprenprima -> OPERADOR expren
Rule 30    exprenprima -> L_CUADRADO expren R_CUADRADO
Rule 31    exprenprima -> PUNTO PALABRA_CLAVE
Rule 32    exprenprima -> PUNTO IDENTIFICADOR L_PARENTESIS IDENTIFICADOR R_PARENTESIS
Rule 33    exprenprima -> <empty>
Rule 34    empty -> <empty>

Terminals, with rules where they appear

BOOLEANO             : 11
COMA                 : 1
ENTERO               : 10 12 21
ESPACIO              : 
HILERA               : 
IDENTIFICADOR        : 1 3 3 4 6 7 8 9 13 18 19 22 25 32 32
L_CORCHETE           : 3 3 5 6 8 14
L_CUADRADO           : 3 10 19 24 30
L_PARENTESIS         : 3 8 15 16 17 25 27 32
OPERADOR             : 18 19 29
OPERADOR_LOGICO      : 
PALABRA_CLAVE        : 3 3 3 3 3 3 3 4 6 8 8 15 15 16 17 23 24 24 25 31
PUNTO                : 31 32
PUNTO_Y_COMA         : 7 8 17 18
R_CORCHETE           : 3 3 5 6 8 14
R_CUADRADO           : 3 10 19 24 30
R_PARENTESIS         : 3 8 15 16 17 25 27 32
error                : 

Nonterminals, with rules where they appear

claseprincipal       : 2
declaracion          : 8 14 15 15 16
declavar             : 5 6 8
declclase            : 2
declclaseprima       : 4
declmetodo           : 5 6
empty                : 
expren               : 8 15 16 17 18 19 19 24 26 27 29 30
exprenprima          : 21 22 23 24 25 26 27
listaformal          : 8
programa             : 
restricformal        : 9 0
tipo                 : 1 7 8 9

Parsing method: LALR

state 0

    (0) S' -> . restricformal
    (1) restricformal -> . COMA tipo IDENTIFICADOR

    COMA            shift and go to state 2

    restricformal                  shift and go to state 1

state 1

    (0) S' -> restricformal .



state 2

    (1) restricformal -> COMA . tipo IDENTIFICADOR
    (10) tipo -> . ENTERO L_CUADRADO R_CUADRADO
    (11) tipo -> . BOOLEANO
    (12) tipo -> . ENTERO
    (13) tipo -> . IDENTIFICADOR

    ENTERO          shift and go to state 5
    BOOLEANO        shift and go to state 6
    IDENTIFICADOR   shift and go to state 4

    tipo                           shift and go to state 3

state 3

    (1) restricformal -> COMA tipo . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 7


state 4

    (13) tipo -> IDENTIFICADOR .

    IDENTIFICADOR   reduce using rule 13 (tipo -> IDENTIFICADOR .)


state 5

    (10) tipo -> ENTERO . L_CUADRADO R_CUADRADO
    (12) tipo -> ENTERO .

    L_CUADRADO      shift and go to state 8
    IDENTIFICADOR   reduce using rule 12 (tipo -> ENTERO .)


state 6

    (11) tipo -> BOOLEANO .

    IDENTIFICADOR   reduce using rule 11 (tipo -> BOOLEANO .)


state 7

    (1) restricformal -> COMA tipo IDENTIFICADOR .

    $end            reduce using rule 1 (restricformal -> COMA tipo IDENTIFICADOR .)


state 8

    (10) tipo -> ENTERO L_CUADRADO . R_CUADRADO

    R_CUADRADO      shift and go to state 9


state 9

    (10) tipo -> ENTERO L_CUADRADO R_CUADRADO .

    IDENTIFICADOR   reduce using rule 10 (tipo -> ENTERO L_CUADRADO R_CUADRADO .)

